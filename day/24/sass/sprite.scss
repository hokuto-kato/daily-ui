$sprites: (
    'arrow': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg'%3e%3cg data-name='%e3%82%b0%e3%83%ab%e3%83%bc%e3%83%97 13' transform='rotate(90 304.182 -73.818)' fill='%235a5a5a'%3e%3cpath data-name='%e3%83%91%e3%82%b9 64' d='m378.707 219 5.657 5.657-.707.707-5.657-5.657Z'/%3e%3cpath data-name='%e3%83%91%e3%82%b9 63' d='m378 229.657 5.657-5.657.707.707-5.657 5.657Z'/%3e%3c/g%3e%3c/svg%3e",
    'cart': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg'%3e%3cg transform='translate(-4.684)' fill='white'%3e%3cpath data-name='%e3%83%91%e3%82%b9 51' d='M28.994 6.129 11.149 4.716l-.271-1.541A3.32 3.32 0 0 0 8.1.469L4.925 0l-.241 1.631 3.17.47a1.668 1.668 0 0 1 1.4 1.361l2.561 14.515a2.85 2.85 0 0 0 2.807 2.355h11.11l.33-1.649H14.621a1.2 1.2 0 0 1-1.183-.993l-.359-2.031H26.8Z'/%3e%3cpath data-name='%e3%83%91%e3%82%b9 52' d='M15.25 21.216a1.774 1.774 0 1 0 1.774 1.774 1.774 1.774 0 0 0-1.774-1.774Z'/%3e%3cpath data-name='%e3%83%91%e3%82%b9 53' d='M23.13 21.216a1.774 1.774 0 1 0 1.774 1.774 1.774 1.774 0 0 0-1.774-1.774Z'/%3e%3c/g%3e%3c/svg%3e",
    'close': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg'%3e%3cg data-name='%e3%82%b0%e3%83%ab%e3%83%bc%e3%83%97 16' transform='translate(-383.223 -731.222)' fill='white'%3e%3cpath data-name='%e3%83%8f%e3%83%b3%e3%83%90%e3%83%bc%e3%82%ac%e3%83%bc 01' d='m384.637 731.222 14.142 14.142-1.414 1.414-14.142-14.142Z'/%3e%3cpath data-name='%e3%83%8f%e3%83%b3%e3%83%90%e3%83%bc%e3%82%ac%e3%83%bc 02' d='m383.223 745.364 14.142-14.142 1.414 1.414-14.142 14.142Z'/%3e%3c/g%3e%3c/svg%3e",
    'favorite': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg'%3e%3cg data-name='%e3%83%8f%e3%83%bc%e3%83%88%e3%81%ae%e3%82%a2%e3%82%a4%e3%82%b3%e3%83%b3%e7%b4%a0%e6%9d%90 1' transform='translate(.502 -35.721)'%3e%3cpath data-name='%e3%83%91%e3%82%b9 42' d='M18.513 37.706A5.072 5.072 0 0 0 10 40.1a5.07 5.07 0 1 0-8.514 4.772L10 53.391l8.516-8.515a5.07 5.07 0 0 0-.003-7.17Z' fill='white'/%3e%3cpath data-name='%e3%83%91%e3%82%b9 42 - %e3%82%a2%e3%82%a6%e3%83%88%e3%83%a9%e3%82%a4%e3%83%b3' d='M5.068 35.721A5.577 5.577 0 0 1 10 38.7a5.571 5.571 0 1 1 8.869 6.533L10 54.1l-8.871-8.87a5.57 5.57 0 0 1 3.939-9.509Zm5.415 4.5h-.972A4.57 4.57 0 0 0 .5 41.291a4.539 4.539 0 0 0 1.338 3.231L10 52.684l8.162-8.161a4.57 4.57 0 1 0-7.676-4.3Z' fill='%235a5a5a'/%3e%3c/g%3e%3c/svg%3e"
);

$sizes: (
    'arrow': (
        'width': 11.364px,
        'height': 6.364px
    ),
    'cart': (
        'width': 24.31px,
        'height': 24.763px
    ),
    'close': (
        'width': 15.556px,
        'height': 15.556px
    ),
    'favorite': (
        'width': 21px,
        'height': 18.377px
    )
);

$variables: (
    /* EMPTY */
);

// https://github.com/waldemarfm/sass-svg-uri/blob/v1.0.0/_svg-uri.scss
@function sprite-str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if type-of($replace) == 'null' {
        $replace: '';
    }

    @if ( $index ) {
        @return str-slice($string, 1, $index - 1) + $replace + sprite-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function sprite-svg-uri($value) {
    $output: $value;

    $output: sprite-str-replace($output, '"', "'");
    $output: sprite-str-replace($output, '<', '%3C');
    $output: sprite-str-replace($output, '>', '%3E');
    $output: sprite-str-replace($output, '&', '%26');
    $output: sprite-str-replace($output, '#', '%23');

    @return $output;
}

@mixin sprite($name, $user-variables: (), $include-size: false) {
    $sprite: map-get($sprites, $name);

    // Inject variables
    $default-variables: map-get($variables, $name);
    @if type-of($default-variables) == 'map' {
        @each $key, $value in map-merge($default-variables, $user-variables) {
            @if ( not map-has-key($default-variables, $key) ) {
                @warn 'Sprite \'#{$name}\' does not support variable named \'#{$key}\'';
            }

            $sprite: sprite-str-replace($sprite, '___#{$key}___', sprite-svg-uri(quote(#{$value})));
        }
    } @else if type-of($user-variables) == 'map' {
        @warn 'Sprite \'#{$name}\' does not contain any variables';
    }

    background: url($sprite) center no-repeat;

    @if $include-size {
        $size: map-get($sizes, $name);
        @if $include-size == true {
            background-size: map-get($size, width) map-get($size, height);
        } @else if $include-size == 'box' {
            width: map-get($size, width);
            height: map-get($size, height);
        }
    }
}
